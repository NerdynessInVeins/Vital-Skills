{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vital Skills\\\\React\\\\react-quiz-qpp\\\\src\\\\components\\\\Quiz.js\";\n// Quiz.js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getQuestions } from '../selectors'; // Adjust the path according to your folder structure\n\nconst Quiz = () => {\n  // Use the memoized selector to get the questions\n  const questions = useSelector(getQuestions);\n  if (!questions || questions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, \"Loading...\"); // Display a loading message if there are no questions yet\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Quiz\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, questions.map((question, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, question.text) // Adjust according to your question structure\n  )));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useSelector","getQuestions","Quiz","questions","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","key","text"],"sources":["E:/Vital Skills/React/react-quiz-qpp/src/components/Quiz.js"],"sourcesContent":["// Quiz.js\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getQuestions } from '../selectors';  // Adjust the path according to your folder structure\r\n\r\nconst Quiz = () => {\r\n  // Use the memoized selector to get the questions\r\n  const questions = useSelector(getQuestions);\r\n\r\n  if (!questions || questions.length === 0) {\r\n    return <div>Loading...</div>;  // Display a loading message if there are no questions yet\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quiz</h2>\r\n      <ul>\r\n        {questions.map((question, index) => (\r\n          <li key={index}>{question.text}</li>  // Adjust according to your question structure\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,cAAc,CAAC,CAAE;;AAE9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB;EACA,MAAMC,SAAS,GAAGH,WAAW,CAACC,YAAY,CAAC;EAE3C,IAAI,CAACE,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IACxC,oBAAOL,KAAA,CAAAM,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,YAAe,CAAC,CAAC,CAAE;EACjC;EAEA,oBACEZ,KAAA,CAAAM,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEZ,KAAA,CAAAM,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eACbZ,KAAA,CAAAM,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGR,SAAS,CAACS,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7Bf,KAAA,CAAAM,aAAA;IAAIU,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,QAAQ,CAACG,IAAS,CAAC,CAAE;EACvC,CACC,CACD,CAAC;AAEV,CAAC;AAED,eAAed,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}